from fastapi import FastAPI, HTTPException, APIRouter
from schemas.icmp import NetworkAddress, ScanResult
from services.icmp import NetworkScanner
from typing import List


router = APIRouter(
    prefix="/icmp",
    tags=["icmp"],
)

@router.post("/scan", response_model=ScanResult)
async def get_alive_hosts(net: NetworkAddress):
    if not net.ip:
        raise HTTPException(status_code=400, detail="Network ip is required")
    
    if not net.mask:
        raise HTTPException(status_code=400, detail="Network mask is required")
    
    network = net.ip+'/'+net.mask
    netscan = NetworkScanner(network)
    
    res_ips = ScanResult(active_hosts=netscan.ping_sweep())
    
    return res_ips



# network = '10.8.0.0/24'
# netscan = NetworkScanner(network)
# ips = netscan.ping_sweep()
# print(ips)